name: ReleaseProcess2-0

on:
  push:
    branches: [ master ]
  release:
    branches: [ master ]

jobs:

  quality-metrics:

    runs-on: ubuntu-latest

    steps:
      - name: Download repository
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Maven clean install
        run: mvn clean install
      - name: Mutation tests for shop module
        run: mvn -f shop/ pitest:mutationCoverage
      - name: Mutation tests for inventory module
        run: mvn -f inventory/ pitest:mutationCoverage
      - name: Mutation tests for shipment module
        run: mvn -f shipment/ pitest:mutationCoverage
      - name: Archive code coverage - Inventory
        uses: actions/upload-artifact@v3
        with:
          name: codeCoverage-inventory
          path: inventory/target/site/jacoco
      - name: Archive mutation coverage - Inventory
        uses: actions/upload-artifact@v3
        with:
          name: mutationCoverage-inventory
          path: inventory/target/pit-reports
      - name: Archive code coverage - Shop
        uses: actions/upload-artifact@v3
        with:
          name: codeCoverage-shop
          path: shop/target/site/jacoco
      - name: Archive mutation coverage - Shop
        uses: actions/upload-artifact@v3
        with:
          name: mutationCoverage-shop
          path: shop/target/pit-reports
      - name: Archive code coverage - Shipment
        uses: actions/upload-artifact@v3
        with:
          name: codeCoverage-shipment
          path: shipment/target/site/jacoco
      - name: Archive mutation coverage - Shipment
        uses: actions/upload-artifact@v3
        with:
          name: mutationCoverage-shipment
          path: shipment/target/pit-reports

  sonarCloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

  docker-build-and-publish:

    runs-on: ubuntu-latest

    steps:
      - name: Download repository
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Maven clean install
        run: mvn clean install
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build docker image - inventory
        run: mvn -f inventory/ spring-boot:build-image -Dspring-boot.build-image.imageName=ecommerceapp/inventory
      - name: Tag Docker Image - inventory
        run: docker image tag ecommerceapp/inventory teixeirafernando/ecommerceapp-inventory:latest
      - name: Push Docker Image - inventory
        run: docker image push teixeirafernando/ecommerceapp-inventory:latest
      - name: Build docker image - shop
        run: mvn -f shop/ spring-boot:build-image -Dspring-boot.build-image.imageName=ecommerceapp/shop
      - name: Tag Docker Image - shop
        run: docker image tag ecommerceapp/shop teixeirafernando/ecommerceapp-shop:latest
      - name: Push Docker Image - shop
        run: docker image push teixeirafernando/ecommerceapp-shop:latest
      - name: Build docker image - shipment
        run: mvn -f shipment/ spring-boot:build-image -Dspring-boot.build-image.imageName=ecommerceapp/shipment
      - name: Tag Docker Image - shipment
        run: docker image tag ecommerceapp/shipment teixeirafernando/ecommerceapp-shipment:latest
      - name: Push Docker Image - shipment
        run: docker image push teixeirafernando/ecommerceapp-shipment:latest
